; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\output\st7565.o --asm_dir=.\Listing\ --list_dir=.\Listing\ --depend=.\output\st7565.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\User -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\bsp_lib -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\STM32F10x_StdPeriph_Driver\src -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\bsp_lib -I..\bsp_lib -I..\bsp_lib -I..\bsp_lib -I..\bsp_lib -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\bsp_lib -IC:\Users\Administrator\Desktop\ssr-accounts\handheld_device\RVMDK\RTE -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.0.0\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=515 -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER --omf_browse=.\output\st7565.crf ..\bsp_lib\ST7565.C]
                          THUMB

                          AREA ||i.ClearDisplay||, CODE, READONLY, ALIGN=1

                  ClearDisplay PROC
;;;210    
;;;211    void ClearDisplay()   
000000  b570              PUSH     {r4-r6,lr}
;;;212    {   
;;;213    	uint8_t  i,j;   
;;;214    	for(i=0;i<8;i++)      
000002  2400              MOVS     r4,#0
000004  e015              B        |L1.50|
                  |L1.6|
;;;215    	{   
;;;216         St7565_WriteCmd(0xB0+i);               // (Page = 0xB0)//???????   
000006  f10401b0          ADD      r1,r4,#0xb0
00000a  b2c8              UXTB     r0,r1
00000c  f7fffffe          BL       St7565_WriteCmd
;;;217         St7565_WriteCmd(0x10);   
000010  2010              MOVS     r0,#0x10
000012  f7fffffe          BL       St7565_WriteCmd
;;;218         St7565_WriteCmd(0x00);       
000016  2000              MOVS     r0,#0
000018  f7fffffe          BL       St7565_WriteCmd
;;;219    		for(j=0;j<132;j++)            //????????   
00001c  2500              MOVS     r5,#0
00001e  e004              B        |L1.42|
                  |L1.32|
;;;220    		{    
;;;221    			St7565_WriteDat(0x00);   
000020  2000              MOVS     r0,#0
000022  f7fffffe          BL       St7565_WriteDat
000026  1c68              ADDS     r0,r5,#1              ;219
000028  b2c5              UXTB     r5,r0                 ;219
                  |L1.42|
00002a  2d84              CMP      r5,#0x84              ;219
00002c  dbf8              BLT      |L1.32|
00002e  1c60              ADDS     r0,r4,#1              ;214
000030  b2c4              UXTB     r4,r0                 ;214
                  |L1.50|
000032  2c08              CMP      r4,#8                 ;214
000034  dbe7              BLT      |L1.6|
;;;222    		}   
;;;223    	}   
;;;224    }
000036  bd70              POP      {r4-r6,pc}
;;;225    
                          ENDP


                          AREA ||i.Init_St7565||, CODE, READONLY, ALIGN=2

                  Init_St7565 PROC
;;;263    
;;;264    void Init_St7565(void)
000000  b510              PUSH     {r4,lr}
;;;265    {
;;;266    	St7565_Port();  
000002  f7fffffe          BL       St7565_Port
;;;267    	lcd_rst_low();
000006  2102              MOVS     r1,#2
000008  4819              LDR      r0,|L2.112|
00000a  f7fffffe          BL       GPIO_ResetBits
;;;268    	delayms(200); 
00000e  20c8              MOVS     r0,#0xc8
000010  f7fffffe          BL       delayms
;;;269      lcd_rst_high();  
000014  2102              MOVS     r1,#2
000016  4816              LDR      r0,|L2.112|
000018  f7fffffe          BL       GPIO_SetBits
;;;270    	delayms(200);   
00001c  20c8              MOVS     r0,#0xc8
00001e  f7fffffe          BL       delayms
;;;271                                   
;;;272    	St7565_WriteCmd(0xe2);//internal reset          
000022  20e2              MOVS     r0,#0xe2
000024  f7fffffe          BL       St7565_WriteCmd
;;;273    	St7565_WriteCmd(0xA3);//Bais set     1/9 bais    
000028  20a3              MOVS     r0,#0xa3
00002a  f7fffffe          BL       St7565_WriteCmd
;;;274    	St7565_WriteCmd(0xA0);//ADC select 0xa0 normal 0xA1 reverse  
00002e  20a0              MOVS     r0,#0xa0
000030  f7fffffe          BL       St7565_WriteCmd
;;;275    	St7565_WriteCmd(0xc8);//com output scan direction??com??????? 0xc0??????0xC8???¾???   
000034  20c8              MOVS     r0,#0xc8
000036  f7fffffe          BL       St7565_WriteCmd
;;;276    /****Select internal resistor ratio****/   
;;;277    	St7565_WriteCmd(0x2c);//????????????   
00003a  202c              MOVS     r0,#0x2c
00003c  f7fffffe          BL       St7565_WriteCmd
;;;278    	St7565_WriteCmd(0x2e);//????????????2um   
000040  202e              MOVS     r0,#0x2e
000042  f7fffffe          BL       St7565_WriteCmd
;;;279    	St7565_WriteCmd(0x2F);//   
000046  202f              MOVS     r0,#0x2f
000048  f7fffffe          BL       St7565_WriteCmd
;;;280    /**************************************/   
;;;281       
;;;282    	St7565_WriteCmd(0x81);//???g????   
00004c  2081              MOVS     r0,#0x81
00004e  f7fffffe          BL       St7565_WriteCmd
;;;283    	St7565_WriteCmd(0x19);//????????J?????? ?????0x00-0x3f   
000052  2019              MOVS     r0,#0x19
000054  f7fffffe          BL       St7565_WriteCmd
;;;284      St7565_WriteCmd(0x24);//????????J?????? ?????0x21-0x27 ?????????????U??????U??   
000058  2024              MOVS     r0,#0x24
00005a  f7fffffe          BL       St7565_WriteCmd
;;;285       
;;;286      St7565_WriteCmd(0xAF);//display lcd on             
00005e  20af              MOVS     r0,#0xaf
000060  f7fffffe          BL       St7565_WriteCmd
;;;287      St7565_WriteCmd(0x40);//display start addr
000064  2040              MOVS     r0,#0x40
000066  f7fffffe          BL       St7565_WriteCmd
;;;288           
;;;289    	ClearDisplay(); 
00006a  f7fffffe          BL       ClearDisplay
;;;290    
;;;291    	//LCD_P8x16Str(0,0,(uchar*)"www.stmcu.org.cn");
;;;292    }
00006e  bd10              POP      {r4,pc}
;;;293    
                          ENDP

                  |L2.112|
                          DCD      0x40010800

                          AREA ||i.LCD_DrawBMP||, CODE, READONLY, ALIGN=1

                  LCD_DrawBMP PROC
;;;421    /***********¹¦ÄÜÃèÊö£ºÏÔÊ¾ÏÔÊ¾BMPÍ¼Æ¬128¡Á64ÆðÊ¼µã×ø±ê(x,y),xµÄ·¶Î§0¡«127£¬yÎªÒ³µÄ·¶Î§0¡«7*****************/
;;;422    void LCD_DrawBMP(unsigned char x0, unsigned char y0,unsigned char x1, unsigned char y1,unsigned char BMP[])
000000  e92d5ff0          PUSH     {r4-r12,lr}
;;;423    { 	
000004  4606              MOV      r6,r0
000006  460f              MOV      r7,r1
000008  4690              MOV      r8,r2
00000a  461c              MOV      r4,r3
00000c  f8dda028          LDR      r10,[sp,#0x28]
;;;424     unsigned int j=0;
000010  f04f0b00          MOV      r11,#0
;;;425     unsigned char x,y;
;;;426      
;;;427      if(y1%8==0) y=y1/8;      
000014  17e1              ASRS     r1,r4,#31
000016  eb047151          ADD      r1,r4,r1,LSR #29
00001a  10c9              ASRS     r1,r1,#3
00001c  eba401c1          SUB      r1,r4,r1,LSL #3
000020  b931              CBNZ     r1,|L3.48|
000022  4620              MOV      r0,r4
000024  17e1              ASRS     r1,r4,#31
000026  eb047151          ADD      r1,r4,r1,LSR #29
00002a  f3c105c7          UBFX     r5,r1,#3,#8
00002e  e006              B        |L3.62|
                  |L3.48|
;;;428      else y=y1/8+1;
000030  4620              MOV      r0,r4
000032  17e1              ASRS     r1,r4,#31
000034  eb047151          ADD      r1,r4,r1,LSR #29
000038  10c9              ASRS     r1,r1,#3
00003a  1c49              ADDS     r1,r1,#1
00003c  b2cd              UXTB     r5,r1
                  |L3.62|
;;;429    	for(y=y0;y<y1;y++)
00003e  463d              MOV      r5,r7
000040  e014              B        |L3.108|
                  |L3.66|
;;;430    	{
;;;431    		//OLED_Set_Pos(x0,y);
;;;432    		Setadd12864(x0,y);
000042  4629              MOV      r1,r5
000044  4630              MOV      r0,r6
000046  f7fffffe          BL       Setadd12864
;;;433        for(x=x0;x<x1;x++)
00004a  46b1              MOV      r9,r6
00004c  e00a              B        |L3.100|
                  |L3.78|
;;;434    	    {      
;;;435    	    	St7565_WriteDat(BMP[j++]);	    	
00004e  4659              MOV      r1,r11
000050  f10b0b01          ADD      r11,r11,#1
000054  f81a0001          LDRB     r0,[r10,r1]
000058  f7fffffe          BL       St7565_WriteDat
00005c  f1090001          ADD      r0,r9,#1              ;433
000060  f00009ff          AND      r9,r0,#0xff           ;433
                  |L3.100|
000064  45c1              CMP      r9,r8                 ;433
000066  dbf2              BLT      |L3.78|
000068  1c68              ADDS     r0,r5,#1              ;429
00006a  b2c5              UXTB     r5,r0                 ;429
                  |L3.108|
00006c  42a5              CMP      r5,r4                 ;429
00006e  dbe8              BLT      |L3.66|
;;;436    	    }
;;;437    	}
;;;438    } 
000070  e8bd9ff0          POP      {r4-r12,pc}
                          ENDP


                          AREA ||i.LCD_P8x16Str||, CODE, READONLY, ALIGN=2

                  LCD_P8x16Str PROC
;;;236    /*******************ÏÔÊ¾8*16 ASCIIÂë****************/
;;;237    void LCD_P8x16Str(unsigned char x,unsigned char y,unsigned char ch[])
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;238    {
000004  4607              MOV      r7,r0
000006  460d              MOV      r5,r1
000008  4690              MOV      r8,r2
;;;239    	unsigned char c=0,i=0,j=0;
00000a  2600              MOVS     r6,#0
00000c  2400              MOVS     r4,#0
00000e  46a1              MOV      r9,r4
;;;240    	while (ch[j]!='\0')
000010  e034              B        |L4.124|
                  |L4.18|
;;;241    	{    
;;;242    		c =ch[j]-32;
000012  f8180009          LDRB     r0,[r8,r9]
000016  3820              SUBS     r0,r0,#0x20
000018  b2c6              UXTB     r6,r0
;;;243    		if(x>0x7f)           
00001a  2f7f              CMP      r7,#0x7f
00001c  dd02              BLE      |L4.36|
;;;244        {    
;;;245           x=0;   
00001e  2700              MOVS     r7,#0
;;;246           y++;   
000020  1c68              ADDS     r0,r5,#1
000022  b2c5              UXTB     r5,r0
                  |L4.36|
;;;247    		}
;;;248    		Setadd(x,y*2);
000024  0668              LSLS     r0,r5,#25
000026  0e01              LSRS     r1,r0,#24
000028  4638              MOV      r0,r7
00002a  f7fffffe          BL       Setadd
;;;249    		for(i=0;i<8;i++) 
00002e  2400              MOVS     r4,#0
000030  e007              B        |L4.66|
                  |L4.50|
;;;250    		{
;;;251    			St7565_WriteDat(SF8X16[c*16+i]);//Delay(10);
000032  eb041106          ADD      r1,r4,r6,LSL #4
000036  4a14              LDR      r2,|L4.136|
000038  5c50              LDRB     r0,[r2,r1]
00003a  f7fffffe          BL       St7565_WriteDat
00003e  1c60              ADDS     r0,r4,#1              ;249
000040  b2c4              UXTB     r4,r0                 ;249
                  |L4.66|
000042  2c08              CMP      r4,#8                 ;249
000044  dbf5              BLT      |L4.50|
;;;252    		}	     
;;;253    		Setadd(x,y*2+1);
000046  2001              MOVS     r0,#1
000048  eb000045          ADD      r0,r0,r5,LSL #1
00004c  b2c1              UXTB     r1,r0
00004e  4638              MOV      r0,r7
000050  f7fffffe          BL       Setadd
;;;254    		for(i=0;i<8;i++)
000054  2400              MOVS     r4,#0
000056  e008              B        |L4.106|
                  |L4.88|
;;;255    		{
;;;256    			St7565_WriteDat(SF8X16[c*16+i+8]);  //Delay(10);
000058  eb041106          ADD      r1,r4,r6,LSL #4
00005c  3108              ADDS     r1,r1,#8
00005e  4a0a              LDR      r2,|L4.136|
000060  5c50              LDRB     r0,[r2,r1]
000062  f7fffffe          BL       St7565_WriteDat
000066  1c60              ADDS     r0,r4,#1              ;254
000068  b2c4              UXTB     r4,r0                 ;254
                  |L4.106|
00006a  2c08              CMP      r4,#8                 ;254
00006c  dbf4              BLT      |L4.88|
;;;257    		}
;;;258    		x+=8;
00006e  f1070008          ADD      r0,r7,#8
000072  b2c7              UXTB     r7,r0
;;;259    		j++;
000074  f1090001          ADD      r0,r9,#1
000078  f00009ff          AND      r9,r0,#0xff
                  |L4.124|
00007c  f8180009          LDRB     r0,[r8,r9]            ;240
000080  2800              CMP      r0,#0                 ;240
000082  d1c6              BNE      |L4.18|
;;;260    	}
;;;261    	
;;;262    }
000084  e8bd87f0          POP      {r4-r10,pc}
;;;263    
                          ENDP

                  |L4.136|
                          DCD      SF8X16

                          AREA ||i.LCD_show_line1_bmp||, CODE, READONLY, ALIGN=2

                  LCD_show_line1_bmp PROC
;;;403    
;;;404    void LCD_show_line1_bmp(u8 index){
000000  b538              PUSH     {r3-r5,lr}
000002  4604              MOV      r4,r0
;;;405    
;;;406    	switch(index){
000004  b114              CBZ      r4,|L5.12|
000006  2c01              CMP      r4,#1
000008  d112              BNE      |L5.48|
00000a  e008              B        |L5.30|
                  |L5.12|
;;;407    		case BMP_SIGNAL:
;;;408    			//OLED_DrawBMP(CONNECT_STATUS, 0, CONNECT_STATUS+16, 2, BmpSignal);
;;;409    		  LCD_DrawBMP(CONNECT_STATUS, 0, CONNECT_STATUS+16, 2, LCDBmpSignal);
00000c  480a              LDR      r0,|L5.56|
00000e  2302              MOVS     r3,#2
000010  2248              MOVS     r2,#0x48
000012  2100              MOVS     r1,#0
000014  9000              STR      r0,[sp,#0]
000016  2038              MOVS     r0,#0x38
000018  f7fffffe          BL       LCD_DrawBMP
;;;410    			break;
00001c  e009              B        |L5.50|
                  |L5.30|
;;;411    		case BMP_NO_SIGNAL:
;;;412    			//OLED_DrawBMP(CONNECT_STATUS, 0, CONNECT_STATUS+16, 2, BmpNoSignal);
;;;413    		  LCD_DrawBMP(CONNECT_STATUS, 0, CONNECT_STATUS+16, 2, LCDBmpNoSignal);
00001e  4807              LDR      r0,|L5.60|
000020  2302              MOVS     r3,#2
000022  2248              MOVS     r2,#0x48
000024  2100              MOVS     r1,#0
000026  9000              STR      r0,[sp,#0]
000028  2038              MOVS     r0,#0x38
00002a  f7fffffe          BL       LCD_DrawBMP
;;;414    			break;		
00002e  e000              B        |L5.50|
                  |L5.48|
;;;415    		default:
;;;416    			break;
000030  bf00              NOP      
                  |L5.50|
000032  bf00              NOP                            ;410
;;;417    	}
;;;418    	return;
;;;419    }
000034  bd38              POP      {r3-r5,pc}
;;;420    
                          ENDP

000036  0000              DCW      0x0000
                  |L5.56|
                          DCD      LCDBmpSignal
                  |L5.60|
                          DCD      LCDBmpNoSignal

                          AREA ||i.Setadd||, CODE, READONLY, ALIGN=1

                  Setadd PROC
;;;225    
;;;226    void Setadd(uint8_t xl,uint8_t yl)   
000000  b570              PUSH     {r4-r6,lr}
;;;227    {    uint8_t i;   
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;228         i=xl&0x0f;   
000006  f004060f          AND      r6,r4,#0xf
;;;229         xl=(xl>>4)+0x10;   
00000a  2010              MOVS     r0,#0x10
00000c  eb001424          ADD      r4,r0,r4,ASR #4
;;;230       
;;;231         St7565_WriteCmd(0xb0+yl);        
000010  f10501b0          ADD      r1,r5,#0xb0
000014  b2c8              UXTB     r0,r1
000016  f7fffffe          BL       St7565_WriteCmd
;;;232         St7565_WriteCmd(xl);   
00001a  4620              MOV      r0,r4
00001c  f7fffffe          BL       St7565_WriteCmd
;;;233         St7565_WriteCmd(i);    
000020  4630              MOV      r0,r6
000022  f7fffffe          BL       St7565_WriteCmd
;;;234    }
000026  bd70              POP      {r4-r6,pc}
;;;235    
                          ENDP


                          AREA ||i.St7565_Port||, CODE, READONLY, ALIGN=2

                  St7565_Port PROC
;;;120    
;;;121    void St7565_Port(void)
000000  b508              PUSH     {r3,lr}
;;;122    {
;;;123    //	GPIO_InitTypeDef GPIO_InitStructure;
;;;124    //	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB  , ENABLE);	
;;;125    //	
;;;126    //  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9|GPIO_Pin_10|GPIO_Pin_11|GPIO_Pin_12|GPIO_Pin_13|GPIO_Pin_14;				        
;;;127    //  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
;;;128    //  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;			  
;;;129    //  GPIO_Init(GPIOB, &GPIO_InitStructure);
;;;130    
;;;131    
;;;132      GPIO_InitTypeDef  GPIO_InitStructure;
;;;133    	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
000002  2101              MOVS     r1,#1
000004  2004              MOVS     r0,#4
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;134    	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);
00000a  2101              MOVS     r1,#1
00000c  2008              MOVS     r0,#8
00000e  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;135    	
;;;136      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0|GPIO_Pin_1|GPIO_Pin_2;
000012  2007              MOVS     r0,#7
000014  f8ad0000          STRH     r0,[sp,#0]
;;;137    	GPIO_InitStructure.GPIO_Mode =GPIO_Mode_Out_PP;  //ÍÆÍìÊä³ö
000018  2010              MOVS     r0,#0x10
00001a  f88d0003          STRB     r0,[sp,#3]
;;;138    	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;  //
00001e  2003              MOVS     r0,#3
000020  f88d0002          STRB     r0,[sp,#2]
;;;139    	GPIO_Init(GPIOA,&GPIO_InitStructure);  
000024  4669              MOV      r1,sp
000026  4808              LDR      r0,|L7.72|
000028  f7fffffe          BL       GPIO_Init
;;;140    	
;;;141    	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6|GPIO_Pin_7;
00002c  20c0              MOVS     r0,#0xc0
00002e  f8ad0000          STRH     r0,[sp,#0]
;;;142    	GPIO_InitStructure.GPIO_Mode =GPIO_Mode_Out_PP;  //ÍÆÍìÊä³ö
000032  2010              MOVS     r0,#0x10
000034  f88d0003          STRB     r0,[sp,#3]
;;;143    	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;  //
000038  2003              MOVS     r0,#3
00003a  f88d0002          STRB     r0,[sp,#2]
;;;144    	GPIO_Init(GPIOB,&GPIO_InitStructure); 	
00003e  4669              MOV      r1,sp
000040  4802              LDR      r0,|L7.76|
000042  f7fffffe          BL       GPIO_Init
;;;145    }
000046  bd08              POP      {r3,pc}
;;;146    
                          ENDP

                  |L7.72|
                          DCD      0x40010800
                  |L7.76|
                          DCD      0x40010c00

                          AREA ||i.St7565_WriteCmd||, CODE, READONLY, ALIGN=2

                  St7565_WriteCmd PROC
;;;158       
;;;159    void St7565_WriteCmd(uint8_t com)    
000000  b570              PUSH     {r4-r6,lr}
;;;160    {   
000002  4604              MOV      r4,r0
;;;161    	uint8_t i,j;   
;;;162    	lcd_cs_low();
000004  2101              MOVS     r1,#1
000006  4819              LDR      r0,|L8.108|
000008  f7fffffe          BL       GPIO_ResetBits
;;;163    	lcd_a0_low();
00000c  2104              MOVS     r1,#4
00000e  4817              LDR      r0,|L8.108|
000010  f7fffffe          BL       GPIO_ResetBits
;;;164    	lcd_sck_low();
000014  2140              MOVS     r1,#0x40
000016  4816              LDR      r0,|L8.112|
000018  f7fffffe          BL       GPIO_ResetBits
;;;165    	
;;;166    	for(i=0;i<8;i++)   
00001c  2600              MOVS     r6,#0
00001e  e019              B        |L8.84|
                  |L8.32|
;;;167    	{    
;;;168    		j=com;    
000020  4625              MOV      r5,r4
;;;169    		lcd_sck_low();
000022  2140              MOVS     r1,#0x40
000024  4812              LDR      r0,|L8.112|
000026  f7fffffe          BL       GPIO_ResetBits
;;;170    		if( (com&0x80)==0x80)
00002a  f0040080          AND      r0,r4,#0x80
00002e  2880              CMP      r0,#0x80
000030  d104              BNE      |L8.60|
;;;171    		{
;;;172    			lcd_sda_high();
000032  2180              MOVS     r1,#0x80
000034  480e              LDR      r0,|L8.112|
000036  f7fffffe          BL       GPIO_SetBits
00003a  e003              B        |L8.68|
                  |L8.60|
;;;173    		}
;;;174    		else
;;;175    		{
;;;176    			lcd_sda_low();
00003c  2180              MOVS     r1,#0x80
00003e  480c              LDR      r0,|L8.112|
000040  f7fffffe          BL       GPIO_ResetBits
                  |L8.68|
;;;177    		}
;;;178    		lcd_sck_high();       
000044  2140              MOVS     r1,#0x40
000046  480a              LDR      r0,|L8.112|
000048  f7fffffe          BL       GPIO_SetBits
;;;179    		com=j<<1;   
00004c  0668              LSLS     r0,r5,#25
00004e  0e04              LSRS     r4,r0,#24
000050  1c70              ADDS     r0,r6,#1              ;166
000052  b2c6              UXTB     r6,r0                 ;166
                  |L8.84|
000054  2e08              CMP      r6,#8                 ;166
000056  dbe3              BLT      |L8.32|
;;;180    	}  
;;;181    	lcd_cs_high();
000058  2101              MOVS     r1,#1
00005a  4804              LDR      r0,|L8.108|
00005c  f7fffffe          BL       GPIO_SetBits
;;;182    	lcd_a0_high();   
000060  2104              MOVS     r1,#4
000062  4802              LDR      r0,|L8.108|
000064  f7fffffe          BL       GPIO_SetBits
;;;183    }   
000068  bd70              POP      {r4-r6,pc}
;;;184       
                          ENDP

00006a  0000              DCW      0x0000
                  |L8.108|
                          DCD      0x40010800
                  |L8.112|
                          DCD      0x40010c00

                          AREA ||i.St7565_WriteDat||, CODE, READONLY, ALIGN=2

                  St7565_WriteDat PROC
;;;185       
;;;186    void St7565_WriteDat(uint8_t dat)    
000000  b570              PUSH     {r4-r6,lr}
;;;187    {   
000002  4604              MOV      r4,r0
;;;188    	uint8_t i,j; 
;;;189    	lcd_cs_low();   //CS=0
000004  2101              MOVS     r1,#1
000006  4819              LDR      r0,|L9.108|
000008  f7fffffe          BL       GPIO_ResetBits
;;;190    	lcd_a0_high();	//A0=1
00000c  2104              MOVS     r1,#4
00000e  4817              LDR      r0,|L9.108|
000010  f7fffffe          BL       GPIO_SetBits
;;;191    	lcd_sck_low();  
000014  2140              MOVS     r1,#0x40
000016  4816              LDR      r0,|L9.112|
000018  f7fffffe          BL       GPIO_ResetBits
;;;192    	for(i=0;i<8;i++)   
00001c  2600              MOVS     r6,#0
00001e  e019              B        |L9.84|
                  |L9.32|
;;;193    	{    
;;;194    		j=dat;   
000020  4625              MOV      r5,r4
;;;195    		lcd_sck_low();
000022  2140              MOVS     r1,#0x40
000024  4812              LDR      r0,|L9.112|
000026  f7fffffe          BL       GPIO_ResetBits
;;;196    		if( (dat&0x80)==0x80 )
00002a  f0040080          AND      r0,r4,#0x80
00002e  2880              CMP      r0,#0x80
000030  d104              BNE      |L9.60|
;;;197    		{
;;;198    			lcd_sda_high();
000032  2180              MOVS     r1,#0x80
000034  480e              LDR      r0,|L9.112|
000036  f7fffffe          BL       GPIO_SetBits
00003a  e003              B        |L9.68|
                  |L9.60|
;;;199    		}
;;;200    		else
;;;201    		{
;;;202    			lcd_sda_low();
00003c  2180              MOVS     r1,#0x80
00003e  480c              LDR      r0,|L9.112|
000040  f7fffffe          BL       GPIO_ResetBits
                  |L9.68|
;;;203    		}
;;;204    		lcd_sck_high();      
000044  2140              MOVS     r1,#0x40
000046  480a              LDR      r0,|L9.112|
000048  f7fffffe          BL       GPIO_SetBits
;;;205    		dat=j<<1;   
00004c  0668              LSLS     r0,r5,#25
00004e  0e04              LSRS     r4,r0,#24
000050  1c70              ADDS     r0,r6,#1              ;192
000052  b2c6              UXTB     r6,r0                 ;192
                  |L9.84|
000054  2e08              CMP      r6,#8                 ;192
000056  dbe3              BLT      |L9.32|
;;;206    	} 
;;;207      lcd_cs_high();
000058  2101              MOVS     r1,#1
00005a  4804              LDR      r0,|L9.108|
00005c  f7fffffe          BL       GPIO_SetBits
;;;208    	lcd_a0_low(); 
000060  2104              MOVS     r1,#4
000062  4802              LDR      r0,|L9.108|
000064  f7fffffe          BL       GPIO_ResetBits
;;;209    } 
000068  bd70              POP      {r4-r6,pc}
;;;210    
                          ENDP

00006a  0000              DCW      0x0000
                  |L9.108|
                          DCD      0x40010800
                  |L9.112|
                          DCD      0x40010c00

                          AREA ||i.delayms||, CODE, READONLY, ALIGN=1

                  delayms PROC
;;;146    
;;;147    void delayms(uint16_t ms)   
000000  4601              MOV      r1,r0
;;;148    {      
;;;149        uint8_t j;   
;;;150        while(ms--)   
000002  e005              B        |L10.16|
                  |L10.4|
;;;151          for(j=0;j<=20;j++);                            
000004  2000              MOVS     r0,#0
000006  e001              B        |L10.12|
                  |L10.8|
000008  1c42              ADDS     r2,r0,#1
00000a  b2d0              UXTB     r0,r2
                  |L10.12|
00000c  2814              CMP      r0,#0x14
00000e  ddfb              BLE      |L10.8|
                  |L10.16|
000010  000a              MOVS     r2,r1                 ;150
000012  f1a10301          SUB      r3,r1,#1              ;150
000016  b299              UXTH     r1,r3                 ;150
000018  d1f4              BNE      |L10.4|
;;;152    }          
00001a  4770              BX       lr
;;;153           
                          ENDP


                          AREA ||i.lcd_pos||, CODE, READONLY, ALIGN=1

                  lcd_pos PROC
;;;300    /*********************************************************/
;;;301    void lcd_pos(uchar X,uchar Y)
000000  b570              PUSH     {r4-r6,lr}
;;;302    {                          
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;303       uchar  pos;
;;;304       if (X==0)
000006  b90c              CBNZ     r4,|L11.12|
;;;305         {X=0x80;}
000008  2480              MOVS     r4,#0x80
00000a  e00a              B        |L11.34|
                  |L11.12|
;;;306       else if (X==1)
00000c  2c01              CMP      r4,#1
00000e  d101              BNE      |L11.20|
;;;307         {X=0x90;}
000010  2490              MOVS     r4,#0x90
000012  e006              B        |L11.34|
                  |L11.20|
;;;308       else if (X==2)
000014  2c02              CMP      r4,#2
000016  d101              BNE      |L11.28|
;;;309         {X=0x88;}
000018  2488              MOVS     r4,#0x88
00001a  e002              B        |L11.34|
                  |L11.28|
;;;310       else if (X==3)
00001c  2c03              CMP      r4,#3
00001e  d100              BNE      |L11.34|
;;;311         {X=0x98;}
000020  2498              MOVS     r4,#0x98
                  |L11.34|
;;;312       pos = X+Y ;  
000022  1960              ADDS     r0,r4,r5
000024  b2c6              UXTB     r6,r0
;;;313       St7565_WriteCmd(pos);     //ÏÔÊ¾µØÖ·
000026  4630              MOV      r0,r6
000028  f7fffffe          BL       St7565_WriteCmd
;;;314    }
00002c  bd70              POP      {r4-r6,pc}
;;;315    
                          ENDP


                          AREA ||i.lcd_show_line2||, CODE, READONLY, ALIGN=2

                  lcd_show_line2 PROC
;;;316    
;;;317    void lcd_show_line2(u8 index, char chr){
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;318    	static u8 x_pos = 0;
;;;319    
;;;320    	if(index != INPUT_NUM){
000006  2d06              CMP      r5,#6
000008  d002              BEQ      |L12.16|
;;;321    		oled_clear_line(LINE2);
00000a  2002              MOVS     r0,#2
00000c  f7fffffe          BL       oled_clear_line
                  |L12.16|
;;;322    	}
;;;323    	switch(index){
000010  2d0b              CMP      r5,#0xb
000012  d26e              BCS      |L12.242|
000014  e8dff005          TBB      [pc,r5]
000018  6d063742          DCB      0x6d,0x06,0x37,0x42
00001c  4d58cc6e          DCB      0x4d,0x58,0xcc,0x6e
000020  8398ad00          DCB      0x83,0x98,0xad,0x00
;;;324    		case INPUT_ADDR:						
;;;325    		  LCD_ShowCHinese("nihao",96,0);Delayms(1000);//OLED_ShowCHinese(0,LINE2,6);
000024  2200              MOVS     r2,#0
000026  2160              MOVS     r1,#0x60
000028  a085              ADR      r0,|L12.576|
00002a  f7fffffe          BL       LCD_ShowCHinese
00002e  f44f707a          MOV      r0,#0x3e8
000032  f7fffffe          BL       Delayms
;;;326    			LCD_ShowCHinese("nihao",96,0);Delayms(1000);//OLED_ShowCHinese(16,LINE2,7);
000036  2200              MOVS     r2,#0
000038  2160              MOVS     r1,#0x60
00003a  a081              ADR      r0,|L12.576|
00003c  f7fffffe          BL       LCD_ShowCHinese
000040  f44f707a          MOV      r0,#0x3e8
000044  f7fffffe          BL       Delayms
;;;327    			OLED_ShowCHinese(32,LINE2,8);
000048  2208              MOVS     r2,#8
00004a  2102              MOVS     r1,#2
00004c  2020              MOVS     r0,#0x20
00004e  f7fffffe          BL       OLED_ShowCHinese
;;;328    			OLED_ShowCHinese(48,LINE2,9);	
000052  2209              MOVS     r2,#9
000054  2102              MOVS     r1,#2
000056  2030              MOVS     r0,#0x30
000058  f7fffffe          BL       OLED_ShowCHinese
;;;329    			OLED_ShowCHinese(64,LINE2,10);
00005c  220a              MOVS     r2,#0xa
00005e  2102              MOVS     r1,#2
000060  2040              MOVS     r0,#0x40
000062  f7fffffe          BL       OLED_ShowCHinese
;;;330    			OLED_ShowCHinese(80,LINE2,11);
000066  220b              MOVS     r2,#0xb
000068  2102              MOVS     r1,#2
00006a  2050              MOVS     r0,#0x50
00006c  f7fffffe          BL       OLED_ShowCHinese
;;;331    			OLED_ShowCHinese(96,LINE2,12);
000070  220c              MOVS     r2,#0xc
000072  2102              MOVS     r1,#2
000074  2060              MOVS     r0,#0x60
000076  f7fffffe          BL       OLED_ShowCHinese
;;;332    			OLED_ShowCHinese(112,LINE2,13);		
00007a  220d              MOVS     r2,#0xd
00007c  2102              MOVS     r1,#2
00007e  2070              MOVS     r0,#0x70
000080  f7fffffe          BL       OLED_ShowCHinese
;;;333    			break;
000084  e0d9              B        |L12.570|
;;;334    		
;;;335    		case FUN_LIGHT_OFF:
;;;336    			OLED_ShowCHinese(0,LINE2,28);
000086  221c              MOVS     r2,#0x1c
000088  2102              MOVS     r1,#2
00008a  2000              MOVS     r0,#0
00008c  f7fffffe          BL       OLED_ShowCHinese
;;;337    			OLED_ShowCHinese(16,LINE2,29);			
000090  221d              MOVS     r2,#0x1d
000092  2102              MOVS     r1,#2
000094  2010              MOVS     r0,#0x10
000096  f7fffffe          BL       OLED_ShowCHinese
;;;338    			break;
00009a  e0ce              B        |L12.570|
;;;339    		case FUN_LIGHT_RED:
;;;340    			OLED_ShowCHinese(0,LINE2,24);
00009c  2218              MOVS     r2,#0x18
00009e  2102              MOVS     r1,#2
0000a0  2000              MOVS     r0,#0
0000a2  f7fffffe          BL       OLED_ShowCHinese
;;;341    			OLED_ShowCHinese(16,LINE2,25);				
0000a6  2219              MOVS     r2,#0x19
0000a8  2102              MOVS     r1,#2
0000aa  2010              MOVS     r0,#0x10
0000ac  f7fffffe          BL       OLED_ShowCHinese
;;;342    			break;
0000b0  e0c3              B        |L12.570|
;;;343    		case FUN_YELLOW_FLASH:
;;;344    			OLED_ShowCHinese(0,LINE2,26);
0000b2  221a              MOVS     r2,#0x1a
0000b4  2102              MOVS     r1,#2
0000b6  2000              MOVS     r0,#0
0000b8  f7fffffe          BL       OLED_ShowCHinese
;;;345    			OLED_ShowCHinese(16,LINE2,27);				
0000bc  221b              MOVS     r2,#0x1b
0000be  2102              MOVS     r1,#2
0000c0  2010              MOVS     r0,#0x10
0000c2  f7fffffe          BL       OLED_ShowCHinese
;;;346    			break;
0000c6  e0b8              B        |L12.570|
;;;347    		case FUN_EAST_WEST_STRAIGHT:
;;;348    			OLED_ShowCHinese(0,LINE2,30);
0000c8  221e              MOVS     r2,#0x1e
0000ca  2102              MOVS     r1,#2
0000cc  2000              MOVS     r0,#0
0000ce  f7fffffe          BL       OLED_ShowCHinese
;;;349    			OLED_ShowCHinese(16,LINE2,31);	
0000d2  221f              MOVS     r2,#0x1f
0000d4  2102              MOVS     r1,#2
0000d6  2010              MOVS     r0,#0x10
0000d8  f7fffffe          BL       OLED_ShowCHinese
;;;350    			OLED_ShowCHinese(32,LINE2,34);
0000dc  2222              MOVS     r2,#0x22
0000de  2102              MOVS     r1,#2
0000e0  2020              MOVS     r0,#0x20
0000e2  f7fffffe          BL       OLED_ShowCHinese
;;;351    			OLED_ShowCHinese(48,LINE2,35);			
0000e6  2223              MOVS     r2,#0x23
0000e8  2102              MOVS     r1,#2
0000ea  2030              MOVS     r0,#0x30
0000ec  f7fffffe          BL       OLED_ShowCHinese
;;;352    			break;	
0000f0  e0a3              B        |L12.570|
                  |L12.242|
0000f2  e0a1              B        |L12.568|
;;;353    		case FUN_SOUTH_NORTH_STRAIGHT:
;;;354    			OLED_ShowCHinese(0,LINE2,32);
0000f4  2220              MOVS     r2,#0x20
0000f6  2102              MOVS     r1,#2
0000f8  2000              MOVS     r0,#0
0000fa  f7fffffe          BL       OLED_ShowCHinese
;;;355    			OLED_ShowCHinese(16,LINE2,33);	
0000fe  2221              MOVS     r2,#0x21
000100  2102              MOVS     r1,#2
000102  2010              MOVS     r0,#0x10
000104  f7fffffe          BL       OLED_ShowCHinese
;;;356    			OLED_ShowCHinese(32,LINE2,34);
000108  2222              MOVS     r2,#0x22
00010a  2102              MOVS     r1,#2
00010c  2020              MOVS     r0,#0x20
00010e  f7fffffe          BL       OLED_ShowCHinese
;;;357    			OLED_ShowCHinese(48,LINE2,35);			
000112  2223              MOVS     r2,#0x23
000114  2102              MOVS     r1,#2
000116  2030              MOVS     r0,#0x30
000118  f7fffffe          BL       OLED_ShowCHinese
;;;358    			break;
00011c  e08d              B        |L12.570|
;;;359    		case FUN_EAST_WEST_TURN_LEFT:
;;;360    			OLED_ShowCHinese(0,LINE2,30);
00011e  221e              MOVS     r2,#0x1e
000120  2102              MOVS     r1,#2
000122  2000              MOVS     r0,#0
000124  f7fffffe          BL       OLED_ShowCHinese
;;;361    			OLED_ShowCHinese(16,LINE2,31);	
000128  221f              MOVS     r2,#0x1f
00012a  2102              MOVS     r1,#2
00012c  2010              MOVS     r0,#0x10
00012e  f7fffffe          BL       OLED_ShowCHinese
;;;362    			OLED_ShowCHinese(32,LINE2,36);
000132  2224              MOVS     r2,#0x24
000134  2102              MOVS     r1,#2
000136  2020              MOVS     r0,#0x20
000138  f7fffffe          BL       OLED_ShowCHinese
;;;363    			OLED_ShowCHinese(48,LINE2,37);			
00013c  2225              MOVS     r2,#0x25
00013e  2102              MOVS     r1,#2
000140  2030              MOVS     r0,#0x30
000142  f7fffffe          BL       OLED_ShowCHinese
;;;364    			break;	
000146  e078              B        |L12.570|
;;;365    		case FUN_SOUTH_NORTH_TURN_LEFT:
;;;366    			OLED_ShowCHinese(0,LINE2,32);
000148  2220              MOVS     r2,#0x20
00014a  2102              MOVS     r1,#2
00014c  2000              MOVS     r0,#0
00014e  f7fffffe          BL       OLED_ShowCHinese
;;;367    			OLED_ShowCHinese(16,LINE2,33);	
000152  2221              MOVS     r2,#0x21
000154  2102              MOVS     r1,#2
000156  2010              MOVS     r0,#0x10
000158  f7fffffe          BL       OLED_ShowCHinese
;;;368    			OLED_ShowCHinese(32,LINE2,36);
00015c  2224              MOVS     r2,#0x24
00015e  2102              MOVS     r1,#2
000160  2020              MOVS     r0,#0x20
000162  f7fffffe          BL       OLED_ShowCHinese
;;;369    			OLED_ShowCHinese(48,LINE2,37);			
000166  2225              MOVS     r2,#0x25
000168  2102              MOVS     r1,#2
00016a  2030              MOVS     r0,#0x30
00016c  f7fffffe          BL       OLED_ShowCHinese
;;;370    			break;
000170  e063              B        |L12.570|
;;;371    		case FUN_HANDLE_CONTROL_CANCEL:
;;;372    			OLED_ShowCHinese(0,LINE2,40);
000172  2228              MOVS     r2,#0x28
000174  2102              MOVS     r1,#2
000176  2000              MOVS     r0,#0
000178  f7fffffe          BL       OLED_ShowCHinese
;;;373    			OLED_ShowCHinese(16,LINE2,41);	
00017c  2229              MOVS     r2,#0x29
00017e  2102              MOVS     r1,#2
000180  2010              MOVS     r0,#0x10
000182  f7fffffe          BL       OLED_ShowCHinese
;;;374    			OLED_ShowCHinese(32,LINE2,42);
000186  222a              MOVS     r2,#0x2a
000188  2102              MOVS     r1,#2
00018a  2020              MOVS     r0,#0x20
00018c  f7fffffe          BL       OLED_ShowCHinese
;;;375    			OLED_ShowCHinese(48,LINE2,43);
000190  222b              MOVS     r2,#0x2b
000192  2102              MOVS     r1,#2
000194  2030              MOVS     r0,#0x30
000196  f7fffffe          BL       OLED_ShowCHinese
;;;376    			OLED_ShowCHinese(64,LINE2,44);
00019a  222c              MOVS     r2,#0x2c
00019c  2102              MOVS     r1,#2
00019e  2040              MOVS     r0,#0x40
0001a0  f7fffffe          BL       OLED_ShowCHinese
;;;377    			OLED_ShowCHinese(80,LINE2,45);		
0001a4  222d              MOVS     r2,#0x2d
0001a6  2102              MOVS     r1,#2
0001a8  2050              MOVS     r0,#0x50
0001aa  f7fffffe          BL       OLED_ShowCHinese
;;;378    			break;
0001ae  e044              B        |L12.570|
;;;379    		case INPUT_NUM:
;;;380    			if(BUTTON_OK == chr){
0001b0  2c0a              CMP      r4,#0xa
0001b2  d107              BNE      |L12.452|
;;;381    				x_pos = 0;
0001b4  2000              MOVS     r0,#0
0001b6  4924              LDR      r1,|L12.584|
0001b8  7008              STRB     r0,[r1,#0]
;;;382    				OLED_ShowChar(0, LINE2, '_');
0001ba  225f              MOVS     r2,#0x5f
0001bc  2102              MOVS     r1,#2
0001be  f7fffffe          BL       OLED_ShowChar
0001c2  e038              B        |L12.566|
                  |L12.452|
;;;383      			}else if(BUTTON_DEL == chr){
0001c4  2c0b              CMP      r4,#0xb
0001c6  d11a              BNE      |L12.510|
;;;384    				OLED_ShowChar(x_pos*8, LINE2, ' ');
0001c8  491f              LDR      r1,|L12.584|
0001ca  7809              LDRB     r1,[r1,#0]  ; x_pos
0001cc  06c9              LSLS     r1,r1,#27
0001ce  0e08              LSRS     r0,r1,#24
0001d0  2220              MOVS     r2,#0x20
0001d2  2102              MOVS     r1,#2
0001d4  f7fffffe          BL       OLED_ShowChar
;;;385    				x_pos = x_pos>0 ? x_pos-1 : 0;
0001d8  481b              LDR      r0,|L12.584|
0001da  7800              LDRB     r0,[r0,#0]  ; x_pos
0001dc  2800              CMP      r0,#0
0001de  dd03              BLE      |L12.488|
0001e0  4819              LDR      r0,|L12.584|
0001e2  7800              LDRB     r0,[r0,#0]  ; x_pos
0001e4  1e40              SUBS     r0,r0,#1
0001e6  e000              B        |L12.490|
                  |L12.488|
0001e8  2000              MOVS     r0,#0
                  |L12.490|
0001ea  4917              LDR      r1,|L12.584|
0001ec  7008              STRB     r0,[r1,#0]
;;;386    				OLED_ShowChar(x_pos*8, LINE2, '_');
0001ee  7809              LDRB     r1,[r1,#0]  ; x_pos
0001f0  06c9              LSLS     r1,r1,#27
0001f2  0e08              LSRS     r0,r1,#24
0001f4  225f              MOVS     r2,#0x5f
0001f6  2102              MOVS     r1,#2
0001f8  f7fffffe          BL       OLED_ShowChar
0001fc  e01b              B        |L12.566|
                  |L12.510|
;;;387    			}else{
;;;388    				if(BUTTON_FUN == chr || BUTTON_COLON == chr){
0001fe  2c0c              CMP      r4,#0xc
000200  d001              BEQ      |L12.518|
000202  2c0d              CMP      r4,#0xd
000204  d100              BNE      |L12.520|
                  |L12.518|
;;;389    					return;
;;;390    				}
;;;391    				chr += 0x30;
;;;392    				OLED_ShowChar(x_pos*8, LINE2, chr);
;;;393    				x_pos ++;
;;;394    				OLED_ShowChar(x_pos*8, LINE2, '_');
;;;395    			}
;;;396    			break;
;;;397    		default:
;;;398    			break;
;;;399    	}
;;;400    	return;
;;;401    }
000206  bd70              POP      {r4-r6,pc}
                  |L12.520|
000208  f1040030          ADD      r0,r4,#0x30           ;391
00020c  b2c4              UXTB     r4,r0                 ;391
00020e  490e              LDR      r1,|L12.584|
000210  7809              LDRB     r1,[r1,#0]            ;392  ; x_pos
000212  06c9              LSLS     r1,r1,#27             ;392
000214  0e08              LSRS     r0,r1,#24             ;392
000216  4622              MOV      r2,r4                 ;392
000218  2102              MOVS     r1,#2                 ;392
00021a  f7fffffe          BL       OLED_ShowChar
00021e  480a              LDR      r0,|L12.584|
000220  7800              LDRB     r0,[r0,#0]            ;393  ; x_pos
000222  1c40              ADDS     r0,r0,#1              ;393
000224  4908              LDR      r1,|L12.584|
000226  7008              STRB     r0,[r1,#0]            ;393
000228  7809              LDRB     r1,[r1,#0]            ;394  ; x_pos
00022a  06c9              LSLS     r1,r1,#27             ;394
00022c  0e08              LSRS     r0,r1,#24             ;394
00022e  225f              MOVS     r2,#0x5f              ;394
000230  2102              MOVS     r1,#2                 ;394
000232  f7fffffe          BL       OLED_ShowChar
                  |L12.566|
000236  e000              B        |L12.570|
                  |L12.568|
000238  bf00              NOP                            ;398
                  |L12.570|
00023a  bf00              NOP                            ;333
00023c  bf00              NOP                            ;400
00023e  e7e2              B        |L12.518|
;;;402    
                          ENDP

                  |L12.576|
000240  6e696861          DCB      "nihao",0
000244  6f00    
000246  00                DCB      0
000247  00                DCB      0
                  |L12.584|
                          DCD      x_pos

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  SF8X16
000000  00000000          DCB      0x00,0x00,0x00,0x00
000004  00000000          DCB      0x00,0x00,0x00,0x00
000008  00000000          DCB      0x00,0x00,0x00,0x00
00000c  00000000          DCB      0x00,0x00,0x00,0x00
000010  000000f8          DCB      0x00,0x00,0x00,0xf8
000014  00000000          DCB      0x00,0x00,0x00,0x00
000018  00000033          DCB      0x00,0x00,0x00,0x33
00001c  30000000          DCB      0x30,0x00,0x00,0x00
000020  00100c06          DCB      0x00,0x10,0x0c,0x06
000024  100c0600          DCB      0x10,0x0c,0x06,0x00
000028  00000000          DCB      0x00,0x00,0x00,0x00
00002c  00000000          DCB      0x00,0x00,0x00,0x00
000030  40c07840          DCB      0x40,0xc0,0x78,0x40
000034  c0784000          DCB      0xc0,0x78,0x40,0x00
000038  043f0404          DCB      0x04,0x3f,0x04,0x04
00003c  3f040400          DCB      0x3f,0x04,0x04,0x00
000040  007088fc          DCB      0x00,0x70,0x88,0xfc
000044  08300000          DCB      0x08,0x30,0x00,0x00
000048  001820ff          DCB      0x00,0x18,0x20,0xff
00004c  211e0000          DCB      0x21,0x1e,0x00,0x00
000050  f008f000          DCB      0xf0,0x08,0xf0,0x00
000054  e0180000          DCB      0xe0,0x18,0x00,0x00
000058  00211c03          DCB      0x00,0x21,0x1c,0x03
00005c  1e211e00          DCB      0x1e,0x21,0x1e,0x00
000060  00f00888          DCB      0x00,0xf0,0x08,0x88
000064  70000000          DCB      0x70,0x00,0x00,0x00
000068  1e212324          DCB      0x1e,0x21,0x23,0x24
00006c  19272110          DCB      0x19,0x27,0x21,0x10
000070  10160e00          DCB      0x10,0x16,0x0e,0x00
000074  00000000          DCB      0x00,0x00,0x00,0x00
000078  00000000          DCB      0x00,0x00,0x00,0x00
00007c  00000000          DCB      0x00,0x00,0x00,0x00
000080  000000e0          DCB      0x00,0x00,0x00,0xe0
000084  18040200          DCB      0x18,0x04,0x02,0x00
000088  00000007          DCB      0x00,0x00,0x00,0x07
00008c  18204000          DCB      0x18,0x20,0x40,0x00
000090  00020418          DCB      0x00,0x02,0x04,0x18
000094  e0000000          DCB      0xe0,0x00,0x00,0x00
000098  00402018          DCB      0x00,0x40,0x20,0x18
00009c  07000000          DCB      0x07,0x00,0x00,0x00
0000a0  404080f0          DCB      0x40,0x40,0x80,0xf0
0000a4  80404000          DCB      0x80,0x40,0x40,0x00
0000a8  0202010f          DCB      0x02,0x02,0x01,0x0f
0000ac  01020200          DCB      0x01,0x02,0x02,0x00
0000b0  000000f0          DCB      0x00,0x00,0x00,0xf0
0000b4  00000000          DCB      0x00,0x00,0x00,0x00
0000b8  0101011f          DCB      0x01,0x01,0x01,0x1f
0000bc  01010100          DCB      0x01,0x01,0x01,0x00
0000c0  00000000          DCB      0x00,0x00,0x00,0x00
0000c4  00000000          DCB      0x00,0x00,0x00,0x00
0000c8  80b07000          DCB      0x80,0xb0,0x70,0x00
0000cc  00000000          DCB      0x00,0x00,0x00,0x00
0000d0  00000000          DCB      0x00,0x00,0x00,0x00
0000d4  00000000          DCB      0x00,0x00,0x00,0x00
0000d8  00010101          DCB      0x00,0x01,0x01,0x01
0000dc  01010101          DCB      0x01,0x01,0x01,0x01
0000e0  00000000          DCB      0x00,0x00,0x00,0x00
0000e4  00000000          DCB      0x00,0x00,0x00,0x00
0000e8  00303000          DCB      0x00,0x30,0x30,0x00
0000ec  00000000          DCB      0x00,0x00,0x00,0x00
0000f0  00000000          DCB      0x00,0x00,0x00,0x00
0000f4  80601804          DCB      0x80,0x60,0x18,0x04
0000f8  00601806          DCB      0x00,0x60,0x18,0x06
0000fc  01000000          DCB      0x01,0x00,0x00,0x00
000100  00e01008          DCB      0x00,0xe0,0x10,0x08
000104  0810e000          DCB      0x08,0x10,0xe0,0x00
000108  000f1020          DCB      0x00,0x0f,0x10,0x20
00010c  20100f00          DCB      0x20,0x10,0x0f,0x00
000110  001010f8          DCB      0x00,0x10,0x10,0xf8
000114  00000000          DCB      0x00,0x00,0x00,0x00
000118  0020203f          DCB      0x00,0x20,0x20,0x3f
00011c  20200000          DCB      0x20,0x20,0x00,0x00
000120  00700808          DCB      0x00,0x70,0x08,0x08
000124  08887000          DCB      0x08,0x88,0x70,0x00
000128  00302824          DCB      0x00,0x30,0x28,0x24
00012c  22213000          DCB      0x22,0x21,0x30,0x00
000130  00300888          DCB      0x00,0x30,0x08,0x88
000134  88483000          DCB      0x88,0x48,0x30,0x00
000138  00182020          DCB      0x00,0x18,0x20,0x20
00013c  20110e00          DCB      0x20,0x11,0x0e,0x00
000140  0000c020          DCB      0x00,0x00,0xc0,0x20
000144  10f80000          DCB      0x10,0xf8,0x00,0x00
000148  00070424          DCB      0x00,0x07,0x04,0x24
00014c  243f2400          DCB      0x24,0x3f,0x24,0x00
000150  00f80888          DCB      0x00,0xf8,0x08,0x88
000154  88080800          DCB      0x88,0x08,0x08,0x00
000158  00192120          DCB      0x00,0x19,0x21,0x20
00015c  20110e00          DCB      0x20,0x11,0x0e,0x00
000160  00e01088          DCB      0x00,0xe0,0x10,0x88
000164  88180000          DCB      0x88,0x18,0x00,0x00
000168  000f1120          DCB      0x00,0x0f,0x11,0x20
00016c  20110e00          DCB      0x20,0x11,0x0e,0x00
000170  00380808          DCB      0x00,0x38,0x08,0x08
000174  c8380800          DCB      0xc8,0x38,0x08,0x00
000178  0000003f          DCB      0x00,0x00,0x00,0x3f
00017c  00000000          DCB      0x00,0x00,0x00,0x00
000180  00708808          DCB      0x00,0x70,0x88,0x08
000184  08887000          DCB      0x08,0x88,0x70,0x00
000188  001c2221          DCB      0x00,0x1c,0x22,0x21
00018c  21221c00          DCB      0x21,0x22,0x1c,0x00
000190  00e01008          DCB      0x00,0xe0,0x10,0x08
000194  0810e000          DCB      0x08,0x10,0xe0,0x00
000198  00003122          DCB      0x00,0x00,0x31,0x22
00019c  22110f00          DCB      0x22,0x11,0x0f,0x00
0001a0  000000c0          DCB      0x00,0x00,0x00,0xc0
0001a4  c0000000          DCB      0xc0,0x00,0x00,0x00
0001a8  00000030          DCB      0x00,0x00,0x00,0x30
0001ac  30000000          DCB      0x30,0x00,0x00,0x00
0001b0  00000080          DCB      0x00,0x00,0x00,0x80
0001b4  00000000          DCB      0x00,0x00,0x00,0x00
0001b8  00008060          DCB      0x00,0x00,0x80,0x60
0001bc  00000000          DCB      0x00,0x00,0x00,0x00
0001c0  00008040          DCB      0x00,0x00,0x80,0x40
0001c4  20100800          DCB      0x20,0x10,0x08,0x00
0001c8  00010204          DCB      0x00,0x01,0x02,0x04
0001cc  08102000          DCB      0x08,0x10,0x20,0x00
0001d0  40404040          DCB      0x40,0x40,0x40,0x40
0001d4  40404000          DCB      0x40,0x40,0x40,0x00
0001d8  04040404          DCB      0x04,0x04,0x04,0x04
0001dc  04040400          DCB      0x04,0x04,0x04,0x00
0001e0  00081020          DCB      0x00,0x08,0x10,0x20
0001e4  40800000          DCB      0x40,0x80,0x00,0x00
0001e8  00201008          DCB      0x00,0x20,0x10,0x08
0001ec  04020100          DCB      0x04,0x02,0x01,0x00
0001f0  00704808          DCB      0x00,0x70,0x48,0x08
0001f4  0808f000          DCB      0x08,0x08,0xf0,0x00
0001f8  00000030          DCB      0x00,0x00,0x00,0x30
0001fc  36010000          DCB      0x36,0x01,0x00,0x00
000200  c030c828          DCB      0xc0,0x30,0xc8,0x28
000204  e810e000          DCB      0xe8,0x10,0xe0,0x00
000208  07182724          DCB      0x07,0x18,0x27,0x24
00020c  23140b00          DCB      0x23,0x14,0x0b,0x00
000210  0000c038          DCB      0x00,0x00,0xc0,0x38
000214  e0000000          DCB      0xe0,0x00,0x00,0x00
000218  203c2302          DCB      0x20,0x3c,0x23,0x02
00021c  02273820          DCB      0x02,0x27,0x38,0x20
000220  08f88888          DCB      0x08,0xf8,0x88,0x88
000224  88700000          DCB      0x88,0x70,0x00,0x00
000228  203f2020          DCB      0x20,0x3f,0x20,0x20
00022c  20110e00          DCB      0x20,0x11,0x0e,0x00
000230  c0300808          DCB      0xc0,0x30,0x08,0x08
000234  08083800          DCB      0x08,0x08,0x38,0x00
000238  07182020          DCB      0x07,0x18,0x20,0x20
00023c  20100800          DCB      0x20,0x10,0x08,0x00
000240  08f80808          DCB      0x08,0xf8,0x08,0x08
000244  0810e000          DCB      0x08,0x10,0xe0,0x00
000248  203f2020          DCB      0x20,0x3f,0x20,0x20
00024c  20100f00          DCB      0x20,0x10,0x0f,0x00
000250  08f88888          DCB      0x08,0xf8,0x88,0x88
000254  e8081000          DCB      0xe8,0x08,0x10,0x00
000258  203f2020          DCB      0x20,0x3f,0x20,0x20
00025c  23201800          DCB      0x23,0x20,0x18,0x00
000260  08f88888          DCB      0x08,0xf8,0x88,0x88
000264  e8081000          DCB      0xe8,0x08,0x10,0x00
000268  203f2000          DCB      0x20,0x3f,0x20,0x00
00026c  03000000          DCB      0x03,0x00,0x00,0x00
000270  c0300808          DCB      0xc0,0x30,0x08,0x08
000274  08380000          DCB      0x08,0x38,0x00,0x00
000278  07182020          DCB      0x07,0x18,0x20,0x20
00027c  221e0200          DCB      0x22,0x1e,0x02,0x00
000280  08f80800          DCB      0x08,0xf8,0x08,0x00
000284  0008f808          DCB      0x00,0x08,0xf8,0x08
000288  203f2101          DCB      0x20,0x3f,0x21,0x01
00028c  01213f20          DCB      0x01,0x21,0x3f,0x20
000290  000808f8          DCB      0x00,0x08,0x08,0xf8
000294  08080000          DCB      0x08,0x08,0x00,0x00
000298  0020203f          DCB      0x00,0x20,0x20,0x3f
00029c  20200000          DCB      0x20,0x20,0x00,0x00
0002a0  00000808          DCB      0x00,0x00,0x08,0x08
0002a4  f8080800          DCB      0xf8,0x08,0x08,0x00
0002a8  c0808080          DCB      0xc0,0x80,0x80,0x80
0002ac  7f000000          DCB      0x7f,0x00,0x00,0x00
0002b0  08f888c0          DCB      0x08,0xf8,0x88,0xc0
0002b4  28180800          DCB      0x28,0x18,0x08,0x00
0002b8  203f2001          DCB      0x20,0x3f,0x20,0x01
0002bc  26382000          DCB      0x26,0x38,0x20,0x00
0002c0  08f80800          DCB      0x08,0xf8,0x08,0x00
0002c4  00000000          DCB      0x00,0x00,0x00,0x00
0002c8  203f2020          DCB      0x20,0x3f,0x20,0x20
0002cc  20203000          DCB      0x20,0x20,0x30,0x00
0002d0  08f8f800          DCB      0x08,0xf8,0xf8,0x00
0002d4  f8f80800          DCB      0xf8,0xf8,0x08,0x00
0002d8  203f003f          DCB      0x20,0x3f,0x00,0x3f
0002dc  003f2000          DCB      0x00,0x3f,0x20,0x00
0002e0  08f830c0          DCB      0x08,0xf8,0x30,0xc0
0002e4  0008f808          DCB      0x00,0x08,0xf8,0x08
0002e8  203f2000          DCB      0x20,0x3f,0x20,0x00
0002ec  07183f00          DCB      0x07,0x18,0x3f,0x00
0002f0  e0100808          DCB      0xe0,0x10,0x08,0x08
0002f4  0810e000          DCB      0x08,0x10,0xe0,0x00
0002f8  0f102020          DCB      0x0f,0x10,0x20,0x20
0002fc  20100f00          DCB      0x20,0x10,0x0f,0x00
000300  08f80808          DCB      0x08,0xf8,0x08,0x08
000304  0808f000          DCB      0x08,0x08,0xf0,0x00
000308  203f2101          DCB      0x20,0x3f,0x21,0x01
00030c  01010000          DCB      0x01,0x01,0x00,0x00
000310  e0100808          DCB      0xe0,0x10,0x08,0x08
000314  0810e000          DCB      0x08,0x10,0xe0,0x00
000318  0f182424          DCB      0x0f,0x18,0x24,0x24
00031c  38504f00          DCB      0x38,0x50,0x4f,0x00
000320  08f88888          DCB      0x08,0xf8,0x88,0x88
000324  88887000          DCB      0x88,0x88,0x70,0x00
000328  203f2000          DCB      0x20,0x3f,0x20,0x00
00032c  030c3020          DCB      0x03,0x0c,0x30,0x20
000330  00708808          DCB      0x00,0x70,0x88,0x08
000334  08083800          DCB      0x08,0x08,0x38,0x00
000338  00382021          DCB      0x00,0x38,0x20,0x21
00033c  21221c00          DCB      0x21,0x22,0x1c,0x00
000340  180808f8          DCB      0x18,0x08,0x08,0xf8
000344  08081800          DCB      0x08,0x08,0x18,0x00
000348  0000203f          DCB      0x00,0x00,0x20,0x3f
00034c  20000000          DCB      0x20,0x00,0x00,0x00
000350  08f80800          DCB      0x08,0xf8,0x08,0x00
000354  0008f808          DCB      0x00,0x08,0xf8,0x08
000358  001f2020          DCB      0x00,0x1f,0x20,0x20
00035c  20201f00          DCB      0x20,0x20,0x1f,0x00
000360  08788800          DCB      0x08,0x78,0x88,0x00
000364  00c83808          DCB      0x00,0xc8,0x38,0x08
000368  00000738          DCB      0x00,0x00,0x07,0x38
00036c  0e010000          DCB      0x0e,0x01,0x00,0x00
000370  f80800f8          DCB      0xf8,0x08,0x00,0xf8
000374  0008f800          DCB      0x00,0x08,0xf8,0x00
000378  033c0700          DCB      0x03,0x3c,0x07,0x00
00037c  073c0300          DCB      0x07,0x3c,0x03,0x00
000380  08186880          DCB      0x08,0x18,0x68,0x80
000384  80681808          DCB      0x80,0x68,0x18,0x08
000388  20302c03          DCB      0x20,0x30,0x2c,0x03
00038c  032c3020          DCB      0x03,0x2c,0x30,0x20
000390  0838c800          DCB      0x08,0x38,0xc8,0x00
000394  c8380800          DCB      0xc8,0x38,0x08,0x00
000398  0000203f          DCB      0x00,0x00,0x20,0x3f
00039c  20000000          DCB      0x20,0x00,0x00,0x00
0003a0  10080808          DCB      0x10,0x08,0x08,0x08
0003a4  c8380800          DCB      0xc8,0x38,0x08,0x00
0003a8  20382621          DCB      0x20,0x38,0x26,0x21
0003ac  20201800          DCB      0x20,0x20,0x18,0x00
0003b0  000000fe          DCB      0x00,0x00,0x00,0xfe
0003b4  02020200          DCB      0x02,0x02,0x02,0x00
0003b8  0000007f          DCB      0x00,0x00,0x00,0x7f
0003bc  40404000          DCB      0x40,0x40,0x40,0x00
0003c0  000c30c0          DCB      0x00,0x0c,0x30,0xc0
0003c4  00000000          DCB      0x00,0x00,0x00,0x00
0003c8  00000001          DCB      0x00,0x00,0x00,0x01
0003cc  0638c000          DCB      0x06,0x38,0xc0,0x00
0003d0  00020202          DCB      0x00,0x02,0x02,0x02
0003d4  fe000000          DCB      0xfe,0x00,0x00,0x00
0003d8  00404040          DCB      0x00,0x40,0x40,0x40
0003dc  7f000000          DCB      0x7f,0x00,0x00,0x00
0003e0  00000402          DCB      0x00,0x00,0x04,0x02
0003e4  02020400          DCB      0x02,0x02,0x04,0x00
0003e8  00000000          DCB      0x00,0x00,0x00,0x00
0003ec  00000000          DCB      0x00,0x00,0x00,0x00
0003f0  00000000          DCB      0x00,0x00,0x00,0x00
0003f4  00000000          DCB      0x00,0x00,0x00,0x00
0003f8  80808080          DCB      0x80,0x80,0x80,0x80
0003fc  80808080          DCB      0x80,0x80,0x80,0x80
000400  00020204          DCB      0x00,0x02,0x02,0x04
000404  00000000          DCB      0x00,0x00,0x00,0x00
000408  00000000          DCB      0x00,0x00,0x00,0x00
00040c  00000000          DCB      0x00,0x00,0x00,0x00
000410  00008080          DCB      0x00,0x00,0x80,0x80
000414  80800000          DCB      0x80,0x80,0x00,0x00
000418  00192422          DCB      0x00,0x19,0x24,0x22
00041c  22223f20          DCB      0x22,0x22,0x3f,0x20
000420  08f80080          DCB      0x08,0xf8,0x00,0x80
000424  80000000          DCB      0x80,0x00,0x00,0x00
000428  003f1120          DCB      0x00,0x3f,0x11,0x20
00042c  20110e00          DCB      0x20,0x11,0x0e,0x00
000430  00000080          DCB      0x00,0x00,0x00,0x80
000434  80800000          DCB      0x80,0x80,0x00,0x00
000438  000e1120          DCB      0x00,0x0e,0x11,0x20
00043c  20201100          DCB      0x20,0x20,0x11,0x00
000440  00000080          DCB      0x00,0x00,0x00,0x80
000444  8088f800          DCB      0x80,0x88,0xf8,0x00
000448  000e1120          DCB      0x00,0x0e,0x11,0x20
00044c  20103f20          DCB      0x20,0x10,0x3f,0x20
000450  00008080          DCB      0x00,0x00,0x80,0x80
000454  80800000          DCB      0x80,0x80,0x00,0x00
000458  001f2222          DCB      0x00,0x1f,0x22,0x22
00045c  22221300          DCB      0x22,0x22,0x13,0x00
000460  008080f0          DCB      0x00,0x80,0x80,0xf0
000464  88888818          DCB      0x88,0x88,0x88,0x18
000468  0020203f          DCB      0x00,0x20,0x20,0x3f
00046c  20200000          DCB      0x20,0x20,0x00,0x00
000470  00008080          DCB      0x00,0x00,0x80,0x80
000474  80808000          DCB      0x80,0x80,0x80,0x00
000478  006b9494          DCB      0x00,0x6b,0x94,0x94
00047c  94936000          DCB      0x94,0x93,0x60,0x00
000480  08f80080          DCB      0x08,0xf8,0x00,0x80
000484  80800000          DCB      0x80,0x80,0x00,0x00
000488  203f2100          DCB      0x20,0x3f,0x21,0x00
00048c  00203f20          DCB      0x00,0x20,0x3f,0x20
000490  00809898          DCB      0x00,0x80,0x98,0x98
000494  00000000          DCB      0x00,0x00,0x00,0x00
000498  0020203f          DCB      0x00,0x20,0x20,0x3f
00049c  20200000          DCB      0x20,0x20,0x00,0x00
0004a0  00000080          DCB      0x00,0x00,0x00,0x80
0004a4  98980000          DCB      0x98,0x98,0x00,0x00
0004a8  00c08080          DCB      0x00,0xc0,0x80,0x80
0004ac  807f0000          DCB      0x80,0x7f,0x00,0x00
0004b0  08f80000          DCB      0x08,0xf8,0x00,0x00
0004b4  80808000          DCB      0x80,0x80,0x80,0x00
0004b8  203f2402          DCB      0x20,0x3f,0x24,0x02
0004bc  2d302000          DCB      0x2d,0x30,0x20,0x00
0004c0  000808f8          DCB      0x00,0x08,0x08,0xf8
0004c4  00000000          DCB      0x00,0x00,0x00,0x00
0004c8  0020203f          DCB      0x00,0x20,0x20,0x3f
0004cc  20200000          DCB      0x20,0x20,0x00,0x00
0004d0  80808080          DCB      0x80,0x80,0x80,0x80
0004d4  80808000          DCB      0x80,0x80,0x80,0x00
0004d8  203f2000          DCB      0x20,0x3f,0x20,0x00
0004dc  3f20003f          DCB      0x3f,0x20,0x00,0x3f
0004e0  80800080          DCB      0x80,0x80,0x00,0x80
0004e4  80800000          DCB      0x80,0x80,0x00,0x00
0004e8  203f2100          DCB      0x20,0x3f,0x21,0x00
0004ec  00203f20          DCB      0x00,0x20,0x3f,0x20
0004f0  00008080          DCB      0x00,0x00,0x80,0x80
0004f4  80800000          DCB      0x80,0x80,0x00,0x00
0004f8  001f2020          DCB      0x00,0x1f,0x20,0x20
0004fc  20201f00          DCB      0x20,0x20,0x1f,0x00
000500  80800080          DCB      0x80,0x80,0x00,0x80
000504  80000000          DCB      0x80,0x00,0x00,0x00
000508  80ffa120          DCB      0x80,0xff,0xa1,0x20
00050c  20110e00          DCB      0x20,0x11,0x0e,0x00
000510  00000080          DCB      0x00,0x00,0x00,0x80
000514  80808000          DCB      0x80,0x80,0x80,0x00
000518  000e1120          DCB      0x00,0x0e,0x11,0x20
00051c  20a0ff80          DCB      0x20,0xa0,0xff,0x80
000520  80808000          DCB      0x80,0x80,0x80,0x00
000524  80808000          DCB      0x80,0x80,0x80,0x00
000528  20203f21          DCB      0x20,0x20,0x3f,0x21
00052c  20000100          DCB      0x20,0x00,0x01,0x00
000530  00008080          DCB      0x00,0x00,0x80,0x80
000534  80808000          DCB      0x80,0x80,0x80,0x00
000538  00332424          DCB      0x00,0x33,0x24,0x24
00053c  24241900          DCB      0x24,0x24,0x19,0x00
000540  008080e0          DCB      0x00,0x80,0x80,0xe0
000544  80800000          DCB      0x80,0x80,0x00,0x00
000548  0000001f          DCB      0x00,0x00,0x00,0x1f
00054c  20200000          DCB      0x20,0x20,0x00,0x00
000550  80800000          DCB      0x80,0x80,0x00,0x00
000554  00808000          DCB      0x00,0x80,0x80,0x00
000558  001f2020          DCB      0x00,0x1f,0x20,0x20
00055c  20103f20          DCB      0x20,0x10,0x3f,0x20
000560  80808000          DCB      0x80,0x80,0x80,0x00
000564  00808080          DCB      0x00,0x80,0x80,0x80
000568  00010e30          DCB      0x00,0x01,0x0e,0x30
00056c  08060100          DCB      0x08,0x06,0x01,0x00
000570  80800080          DCB      0x80,0x80,0x00,0x80
000574  00808080          DCB      0x00,0x80,0x80,0x80
000578  0f300c03          DCB      0x0f,0x30,0x0c,0x03
00057c  0c300f00          DCB      0x0c,0x30,0x0f,0x00
000580  00808000          DCB      0x00,0x80,0x80,0x00
000584  80808000          DCB      0x80,0x80,0x80,0x00
000588  0020312e          DCB      0x00,0x20,0x31,0x2e
00058c  0e312000          DCB      0x0e,0x31,0x20,0x00
000590  80808000          DCB      0x80,0x80,0x80,0x00
000594  00808080          DCB      0x00,0x80,0x80,0x80
000598  80818e70          DCB      0x80,0x81,0x8e,0x70
00059c  18060100          DCB      0x18,0x06,0x01,0x00
0005a0  00808080          DCB      0x00,0x80,0x80,0x80
0005a4  80808000          DCB      0x80,0x80,0x80,0x00
0005a8  0021302c          DCB      0x00,0x21,0x30,0x2c
0005ac  22213000          DCB      0x22,0x21,0x30,0x00
0005b0  00000000          DCB      0x00,0x00,0x00,0x00
0005b4  807c0202          DCB      0x80,0x7c,0x02,0x02
0005b8  00000000          DCB      0x00,0x00,0x00,0x00
0005bc  003f4040          DCB      0x00,0x3f,0x40,0x40
0005c0  00000000          DCB      0x00,0x00,0x00,0x00
0005c4  ff000000          DCB      0xff,0x00,0x00,0x00
0005c8  00000000          DCB      0x00,0x00,0x00,0x00
0005cc  ff000000          DCB      0xff,0x00,0x00,0x00
0005d0  0002027c          DCB      0x00,0x02,0x02,0x7c
0005d4  80000000          DCB      0x80,0x00,0x00,0x00
0005d8  0040403f          DCB      0x00,0x40,0x40,0x3f
0005dc  00000000          DCB      0x00,0x00,0x00,0x00
0005e0  00060101          DCB      0x00,0x06,0x01,0x01
0005e4  02020404          DCB      0x02,0x02,0x04,0x04
0005e8  00000000          DCB      0x00,0x00,0x00,0x00
0005ec  00000000          DCB      0x00,0x00,0x00,0x00

                          AREA ||.data||, DATA, ALIGN=0

                  LCDBmpSignal
000000  00000000          DCB      0x00,0x00,0x00,0x00
000004  0000f0f0          DCB      0x00,0x00,0xf0,0xf0
000008  00ffff00          DCB      0x00,0xff,0xff,0x00
00000c  00000000          DCB      0x00,0x00,0x00,0x00
000010  f0f000ff          DCB      0xf0,0xf0,0x00,0xff
000014  ff00ffff          DCB      0xff,0x00,0xff,0xff
000018  00ffff00          DCB      0x00,0xff,0xff,0x00
00001c  00000000          DCB      0x00,0x00,0x00,0x00
                  LCDBmpNoSignal
000020  00000000          DCB      0x00,0x00,0x00,0x00
000024  0000f0f0          DCB      0x00,0x00,0xf0,0xf0
000028  00ffff00          DCB      0x00,0xff,0xff,0x00
00002c  00000000          DCB      0x00,0x00,0x00,0x00
000030  f0f000ff          DCB      0xf0,0xf0,0x00,0xff
000034  ff00ffff          DCB      0xff,0x00,0xff,0xff
000038  00ffff88          DCB      0x00,0xff,0xff,0x88
00003c  50205088          DCB      0x50,0x20,0x50,0x88
                  x_pos
000040  00                DCB      0x00
