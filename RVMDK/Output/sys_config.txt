; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\Output\sys_config.o --depend=.\Output\sys_config.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\User -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\bsp_lib -IC:\Keil\ARM\INC -IC:\Keil\ARM\INC\ST\STM32F10x -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Output\sys_config.crf ..\bsp_lib\sys_config.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  RCC_Configuration PROC
;;;30     *******************************************************************************************/
;;;31     void RCC_Configuration(void) 
000000  b510              PUSH     {r4,lr}
;;;32     {
;;;33     	/* RCC system reset(for debug purpose) */
;;;34       	RCC_DeInit();
000002  f7fffffe          BL       RCC_DeInit
;;;35     
;;;36       	/* Enable HSE */
;;;37       	RCC_HSEConfig(RCC_HSE_ON);
000006  f44f3080          MOV      r0,#0x10000
00000a  f7fffffe          BL       RCC_HSEConfig
;;;38     
;;;39       	/* Wait till HSE is ready */
;;;40       	while (RCC_GetFlagStatus(RCC_FLAG_HSERDY) == RESET);
00000e  bf00              NOP      
                  |L1.16|
000010  2031              MOVS     r0,#0x31
000012  f7fffffe          BL       RCC_GetFlagStatus
000016  2800              CMP      r0,#0
000018  d0fa              BEQ      |L1.16|
;;;41     
;;;42         /* Enable Prefetch Buffer */
;;;43         FLASH_PrefetchBufferCmd(FLASH_PrefetchBuffer_Enable);
00001a  2010              MOVS     r0,#0x10
00001c  f7fffffe          BL       FLASH_PrefetchBufferCmd
;;;44     
;;;45         /* Flash 2 wait state */
;;;46         FLASH_SetLatency(FLASH_Latency_2);
000020  2002              MOVS     r0,#2
000022  f7fffffe          BL       FLASH_SetLatency
;;;47      
;;;48         /* HCLK = SYSCLK */
;;;49         RCC_HCLKConfig(RCC_SYSCLK_Div1);
000026  2000              MOVS     r0,#0
000028  f7fffffe          BL       RCC_HCLKConfig
;;;50       
;;;51         /* PCLK2 = HCLK */
;;;52         RCC_PCLK2Config(RCC_HCLK_Div1);
00002c  2000              MOVS     r0,#0
00002e  f7fffffe          BL       RCC_PCLK2Config
;;;53     
;;;54         /* PCLK1 = HCLK/2 */
;;;55         RCC_PCLK1Config(RCC_HCLK_Div2);
000032  f44f6080          MOV      r0,#0x400
000036  f7fffffe          BL       RCC_PCLK1Config
;;;56     
;;;57         /* PLLCLK = 8MHz * 9 = 72 MHz */
;;;58         RCC_PLLConfig(RCC_PLLSource_HSE_Div1, RCC_PLLMul_9);
00003a  f44f11e0          MOV      r1,#0x1c0000
00003e  f44f3080          MOV      r0,#0x10000
000042  f7fffffe          BL       RCC_PLLConfig
;;;59     
;;;60         /* Enable PLL */ 
;;;61         RCC_PLLCmd(ENABLE);
000046  2001              MOVS     r0,#1
000048  f7fffffe          BL       RCC_PLLCmd
;;;62     
;;;63         /* Wait till PLL is ready */
;;;64         while(RCC_GetFlagStatus(RCC_FLAG_PLLRDY) == RESET);
00004c  bf00              NOP      
                  |L1.78|
00004e  2039              MOVS     r0,#0x39
000050  f7fffffe          BL       RCC_GetFlagStatus
000054  2800              CMP      r0,#0
000056  d0fa              BEQ      |L1.78|
;;;65     
;;;66         /* Select PLL as system clock source */
;;;67         RCC_SYSCLKConfig(RCC_SYSCLKSource_PLLCLK);
000058  2002              MOVS     r0,#2
00005a  f7fffffe          BL       RCC_SYSCLKConfig
;;;68     
;;;69         /* Wait till PLL is used as system clock source */
;;;70         while(RCC_GetSYSCLKSource() != 0x08);
00005e  bf00              NOP      
                  |L1.96|
000060  f7fffffe          BL       RCC_GetSYSCLKSource
000064  2808              CMP      r0,#8
000066  d1fb              BNE      |L1.96|
;;;71     
;;;72     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA | RCC_APB2Periph_GPIOB |
000068  2100              MOVS     r1,#0
00006a  207c              MOVS     r0,#0x7c
00006c  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;73                              RCC_APB2Periph_GPIOC | RCC_APB2Periph_GPIOD |
;;;74                              RCC_APB2Periph_GPIOE, DISABLE);
;;;75     }
000070  bd10              POP      {r4,pc}
;;;76     
                          ENDP

